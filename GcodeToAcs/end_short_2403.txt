stop

! ??????? G11 - ?????????? ???????????
G11:
	IF ((gA(2) = 88) | (gA(3) = 89) | (gA(4) = 90) | (gA(5) = 68))
		Xact = 0
		Yact = 0	
		IF (gV(5) = 1)						! ????? 1

			CurOffsetX = OffsetX(Z1)
			CurOffsetY = OffsetY(Z1)
			CurOffsetZ = ZOffset(Z1)
			XSavedOffset = CurOffsetX
			YSavedOffset = CurOffsetY	
			ZSavedOffset = CurOffsetZ
			ActX = FPOS(X)
			ActY = FPOS(Y)
			ActZ = FPOS(Z1)
			
			IF (Z1Calibrated =  1)
				Xact = -ActX +  X_Laser_offset + gV(2) + XSavedOffset
				Yact = -ActY +  Y_Laser_offset + gV(3) + YSavedOffset
				Zactd = -ActZ + Z_Laser_offset + gV(4) + ZSavedOffset
			ELSE 
				Xact = -ActX + XGLOBAL + gV(2) 
				Yact = -ActY + YGLOBAL + gV(3) 
				Zactd = -ActZ + ZGLOBAL + gV(4) 
			END
			
			IF (ActZ > ActZ + Zactd)
						PTP/re (X, Y), Xact, Yact
						PTP/re (Z1),  Zactd
			ELSE
						PTP/re (Z1),  Zactd
						PTP/re (X, Y), Xact, Yact
			END
			
			TILL ^AST(X).#MOVE & ^AST(Y).#MOVE & ^AST(Z1).#MOVE
!____________________Z2___________________________

		ELSEIF (gV(5) = 2)						! ????? 1

			CurOffsetX = OffsetX(Z2)
			CurOffsetY = OffsetY(Z2)
			CurOffsetZ = ZOffset(Z2)
			XSavedOffset = CurOffsetX
			YSavedOffset = CurOffsetY	
			ZSavedOffset = CurOffsetZ
			ActX = FPOS(X)
			ActY = FPOS(Y)
			ActZ = FPOS(Z2)
			
			IF (Z2Calibrated =  1)
				Xact = -ActX +  X_Laser_offset + gV(2) + XSavedOffset
				Yact = -ActY +  Y_Laser_offset + gV(3) + YSavedOffset
				Zactd = -ActZ + Z_Laser_offset + gV(4) + ZSavedOffset
			ELSE 
				Xact = -ActX + XGLOBAL + gV(2)
				Yact = -ActY + YGLOBAL + gV(3) 
				Zactd = -ActZ + ZGLOBAL + gV(4)
			END
			
			IF (ActZ > ActZ + Zactd)
						PTP/re (X, Y), Xact, Yact
						PTP/re (Z2),  Zactd
			ELSE
						PTP/re (Z2),  Zactd
						PTP/re (X, Y), Xact, Yact
			END
			
			TILL ^AST(X).#MOVE & ^AST(Y).#MOVE & ^AST(Z2).#MOVE
!____________________Z3___________________________

		ELSEIF (gV(5) = 3)						! ????? 1

			CurOffsetX = OffsetX(Z3)
			CurOffsetY = OffsetY(Z3)
			CurOffsetZ = ZOffset(Z3)
			XSavedOffset = CurOffsetX
			YSavedOffset = CurOffsetY	
			ZSavedOffset = CurOffsetZ
			ActX = FPOS(X)
			ActY = FPOS(Y)
			ActZ = FPOS(Z3)
			
			IF (Z3Calibrated =  1)
				Xact = -ActX +  X_Laser_offset + gV(2) + XSavedOffset
				Yact = -ActY +  Y_Laser_offset + gV(3) + YSavedOffset
				Zactd = -ActZ + Z_Laser_offset + gV(4) + ZSavedOffset
			ELSE 
				Xact = -ActX + XGLOBAL + gV(2) 
				Yact = -ActY + YGLOBAL + gV(3) 
				Zactd = -ActZ + ZGLOBAL + gV(4)
			END
			
			IF (ActZ > ActZ + Zactd)
				PTP/re (X, Y), Xact, Yact
				PTP/re (Z3),  Zactd
			ELSE
				PTP/re (Z3),  Zactd
				PTP/re (X, Y), Xact, Yact
			END
			
			TILL ^AST(X).#MOVE & ^AST(Y).#MOVE & ^AST(Z3).#MOVE
				
			ELSE
				DISP "Wronge Dose number"
				STOP
		END		
	ELSE
		DISP "Not enough parameters"
		STOP
	END
RET

! ??????? G87 - ????????????
G87:
PI = 3.14159
	IF ((gA(2)=80) | (gA(3)=80) | (gA(4)=80))
		IF 		(gV(3)=1)															! ????? 1
			PTP/re (F1), gV(2)/(POW(S1Diameter,2)* PI /4)	
			TILL ^AST(F1).#MOVE! ????????????
			!STOP
		ELSEIF 	(gV(3)=2)															! ????? 2
			PTP/re (F2), gV(2)/(POW(S2Diameter,2)* PI /4)	
			TILL ^AST(F2).#MOVE! ????????????
			!STOP	
		ELSEIF 	(gV(3)=3)															! ????? 3
			PTP/re (F3), gV(2)/(POW(S3Diameter,2)* PI /4)	
			TILL ^AST(F3).#MOVE! ????????????
			!STOP
		ELSE
			DISP "Wrong Axis"
			!STOP
		END
		
	ELSE
		DISP "Wrong Parameters"
		STOP
	END
RET

! ??????? G88 - ????? ?????????

G88:
	LOCAL REAL L,ExtractTime,ExtractVelocity,Portion
	IF ((gA(2)=88) | (gA(3)=89) | (gA(4)=90) | (gA(5)=70) | (gA(6)=86) | (gA(7)=68))
		Xact = 0
		Yact = 0	
		IF (gV(7) = 1)						! ????? 1

			CurOffsetX = OffsetX(Z1)
			CurOffsetY = OffsetY(Z1)
			CurOffsetZ = ZOffset(Z1)
			XSavedOffset = CurOffsetX
			YSavedOffset = CurOffsetY	
			ZSavedOffset = CurOffsetZ
			ActX = FPOS(X)
			ActY = FPOS(Y)
			ActZ = FPOS(Z1)
			
			IF (Z1Calibrated =  1)
				Xact = -ActX +  X_Laser_offset + gV(2) + XSavedOffset
				Yact = -ActY +  Y_Laser_offset + gV(3) + YSavedOffset
				Zactd = -ActZ + Z_Laser_offset + gV(4) + ZSavedOffset
			ELSE 
				Xact = -ActX + XGLOBAL + gV(2) 
				Yact = -ActY + YGLOBAL + gV(3) 
				Zactd = -ActZ + ZGLOBAL + gV(4) 
			END
			
			IF (ABS(Xact) < POW(10, -10))
				Xact = 0
			END
				
			IF (ABS(Yact) < POW(10, -10))
				Yact = 0
			END

			L = SQRT(POW(Xact , 2) + POW(Yact , 2))
				
			IF (L <> 0)
				ExtractTime = L / gV(5)
				ExtractVelocity = gV(6) / (POW(S1Diameter,2)* PI /4) / (ExtractTime) 
				Portion =  gV(6) / (POW(S1Diameter,2)* PI /4)
			ELSE
				ExtractVelocity = 0
				Portion = 0
			END
			
			STARTVELLIN = gV(5)

			IF (ExtractVelocity <= XVEL(F1))
				IF (ActZ > ActZ + Zactd)
					PTP/rv (F1),  Portion, ExtractVelocity
					PTP/rev (X, Y), Xact, Yact, gV(5)
					PTP/rev (Z1),  Zactd, gV(5)
				ELSE
					PTP/rev (Z1),  Zactd, gV(5)
					PTP/rv (F1), Portion, ExtractVelocity
					PTP/rev (X, Y), Xact, Yact, gV(5)
				END
			ELSE
				DISP "F1 velocity too hight"
			END
			
			TILL ^AST(X).#MOVE & ^AST(Y).#MOVE & ^AST(F1).#MOVE
!____________________Z2___________________________
		ELSEIF (gV(7) = 2)						! ????? 1

			CurOffsetX = OffsetX(Z2)
			CurOffsetY = OffsetY(Z2)
			CurOffsetZ = ZOffset(Z2)
			XSavedOffset = CurOffsetX
			YSavedOffset = CurOffsetY	
			ZSavedOffset = CurOffsetZ
			ActX = FPOS(X)
			ActY = FPOS(Y)
			ActZ = FPOS(Z2)
			
			IF (Z2Calibrated =  1)
				Xact = -ActX +  X_Laser_offset + gV(2) + XSavedOffset
				Yact = -ActY +  Y_Laser_offset + gV(3) + YSavedOffset
				Zactd = -ActZ + Z_Laser_offset + gV(4) + ZSavedOffset
			ELSE 
				Xact = -ActX + XGLOBAL + gV(2) 
				Yact = -ActY + YGLOBAL + gV(3)
				Zactd = -ActZ + ZGLOBAL + gV(4) 
			END
			
			IF (ABS(Xact) < POW(10, -10))
				Xact = 0
			END
				
			IF (ABS(Yact) < POW(10, -10))
				Yact = 0
			END

			L = SQRT(POW(Xact , 2) + POW(Yact , 2))
				
			IF (L <> 0)
				ExtractTime = L / gV(5)
				ExtractVelocity = gV(6) / (POW(S2Diameter,2)* PI /4) / (ExtractTime) 
				Portion =  gV(6) / (POW(S2Diameter,2)* PI /4)
			ELSE
				ExtractVelocity = 0
				Portion = 0
			END
			
			STARTVELLIN = gV(5)

			IF (ExtractVelocity<= XVEL(F1))
				IF (ActZ > ActZ + Zactd)
					PTP/rv (F2),  Portion, ExtractVelocity
					PTP/rev (X, Y), Xact, Yact, gV(5)
					PTP/rev (Z2),  Zactd, gV(5)
				ELSE
					PTP/rev (Z2),  Zactd, gV(5)
					PTP/rv (F2), Portion, ExtractVelocity
					PTP/rev (X, Y), Xact, Yact, gV(5)
				END
			ELSE
				DISP "F1 velocity too hight"
			END
			
			TILL ^AST(X).#MOVE & ^AST(Y).#MOVE & ^AST(F2).#MOVE
!____________________Z3___________________________

		ELSEIF (gV(7) = 3)						! ????? 1

			CurOffsetX = OffsetX(Z3)
			CurOffsetY = OffsetY(Z3)
			CurOffsetZ = ZOffset(Z3)
			XSavedOffset = CurOffsetX
			YSavedOffset = CurOffsetY	
			ZSavedOffset = CurOffsetZ
			ActX = FPOS(X)
			ActY = FPOS(Y)
			ActZ = FPOS(Z3)
			
			IF (Z3Calibrated =  1)
				Xact = -ActX +  X_Laser_offset + gV(2) + XSavedOffset
				Yact = -ActY +  Y_Laser_offset + gV(3) + YSavedOffset
				Zactd = -ActZ + Z_Laser_offset + gV(4) + ZSavedOffset
			ELSE 
				Xact = -ActX + XGLOBAL + gV(2) 
				Yact = -ActY + YGLOBAL + gV(3) 
				Zactd = -ActZ + ZGLOBAL + gV(4) 
			END
			
			IF (ABS(Xact) < POW(10, -10))
				Xact = 0
			END
				
			IF (ABS(Yact) < POW(10, -10))
				Yact = 0
			END

			L = SQRT(POW(Xact , 2) + POW(Yact , 2))
				
			IF (L <> 0)
				ExtractTime = L / gV(5)
				ExtractVelocity = gV(6) / (POW(S3Diameter,2)* PI /4) / (ExtractTime) 
				Portion =  gV(6) / (POW(S3Diameter,2)* PI /4)
			ELSE
				ExtractVelocity = 0
				Portion = 0
			END
			
			STARTVELLIN = gV(5)

			IF (ExtractVelocity <= XVEL(F1))
				IF (ActZ > ActZ + Zactd)
					PTP/rv (F3),  Portion, ExtractVelocity
					PTP/rev (X, Y), Xact, Yact, gV(5)
					PTP/rev (Z3),  Zactd, gV(5)
				ELSE
					PTP/rev (Z3),  Zactd, gV(5)
					PTP/rv (F3), Portion, ExtractVelocity
					PTP/rev (X, Y), Xact, Yact, gV(5) 
				END
			ELSE
				DISP "F1 velocity too hight"
			END
			
			TILL ^AST(X).#MOVE & ^AST(Y).#MOVE & ^AST(F3).#MOVE


		
			ELSE
				DISP "Wronge Dose number"
				STOP
			END		
	ELSE
		DISP "Not enough parameters"
		STOP
	END
RET

G90:
ret

G30:
ret

! ??????? G00
G00:
	LOCAL INT i
	!DISP "G00"
		IF (WORKMODE = 90)
			!DISP "90"
			i = 2
			LOOP (9)
				IF 		(gA(i) = 88)
					!DISP "X"
					PTP/wr (X), -FPOS(X) + XGLOBAL + gV(i)
				ELSEIF  (gA(i) = 89)
					!DISP "Y"
					PTP/wr (Y), -FPOS(Y) + YGLOBAL + gV(i)
				ELSEIF 	(gA(i) = 90)
					!DISP "Z"
					PTP/wr (Z1), -FPOS(Z1) + ZGLOBAL + gV(i)
				ELSEIF 	(gA(i) = 85)
					!DISP "U"
					PTP/wr (Z2), -FPOS(Z2) + ZGLOBAL + gV(i)
				ELSEIF 	(gA(i) = 86)
					!DISP "V"
					PTP/wr (Z3), -FPOS(Z3) + ZGLOBAL + gV(i)
				ELSEIF 	(gA(i) = 87)
					!DISP "W"
					PTP/wr (Zs), -FPOS(Zs) + ZGLOBAL + gV(i)
				ELSEIF 	(gA(i) = 65)
					!DISP "A"
					PTP/wr (Zp), -FPOS(Zp) + ZGLOBAL + gV(i)
				END
				i = i + 1
			END
		ELSE
			!DISP "91"
			i = 2
			LOOP (9)
				IF 		(gA(i) = 88)
					!DISP "X"
					PTP/wr (X), gV(i)
				ELSEIF  (gA(i) = 89)
					!DISP "Y"
					PTP/wr (Y), gV(i)
				ELSEIF 	(gA(i) = 90)
					!DISP "Z"
					PTP/wr (Z1), gV(i)
				ELSEIF 	(gA(i) = 85)
					!DISP "U"
					PTP/wr (Z2), gV(i)
				ELSEIF 	(gA(i) = 86)
					!DISP "V"
					PTP/wr (Z3), gV(i)
				ELSEIF 	(gA(i) = 87)
					!DISP "W"
					PTP/wr (Zs), gV(i)
				ELSEIF 	(gA(i) = 65)
					!DISP "A"
					PTP/wr (Zp), gV(i)
				END
				i = i + 1
			END
		END
	GO ALL
	TILL ^AST(X).#MOVE & ^AST(Y).#MOVE & ^AST(Z1).#MOVE & ^AST(Z2).#MOVE & ^AST(Z3).#MOVE & ^AST(Zs).#MOVE & ^AST(Zp).#MOVE
RET

! ??????? G05 - ????????? ???????
G05:
PI = 3.14159
	Xact = 0
	Yact = 0
	Zactd = 0
	!WORKMODE = GGETMODAL(11, 2, 0)
	!DISP "WM = ", WORKMODE
	IF ((gA(2)=88) | (gA(3)=89) | (gA(4)=90) | (gA(5)=86) | (gA(6)=85) | (gA(7)=83) | (gA(8)=68))
			
		! ???????? ?? ????? ?????? ? ?????????? ????????
		IF (gV(8) = 1)															! ????? 1
			
				IF (PrevTool <> gV(8) + 1)
					
					CurOffsetX = -OffsetX(PrevTool) + OffsetX(Z1)
					CurOffsetY = -OffsetY(PrevTool) + OffsetY(Z1)
					CurOffsetZ = -ZOffset(PrevTool) + ZOffset(Z1)
					XSavedOffset = CurOffsetX
					YSavedOffset = CurOffsetY
					ZSavedOffset = CurOffsetZ
				ELSE
					CurOffsetX = 0
					CurOffsetY = 0
					CurOffsetZ = 0
				END
				
				PrevTool = 2
				
				!IF (OffsetZ <> 0)
				!	CurOffsetZ = OffsetZ - FPOS(2)
				!ELSEIF (OffsetZ = ZGLOBAL)
				!	CurOffsetZ = 0
				!ELSE
				!	CurOffsetZ = 0
				!END
				PTP/re(X, Y), CurOffsetX, CurOffsetY
				PTP/re(Z1), -CurOffsetZ + OperatorZOffset(Z1)
				!PTP/re(2), CurOffsetZ
				ActX = FPOS(X) 
				ActY = FPOS(Y)
				ActZ = FPOS(Z1)
				IF (WORKMODE = 90)
					IF (StartTool = gV(8) + 1)
						Xact = -ActX + XGLOBAL + gV(2)
						Yact = -ActY + YGLOBAL + gV(3)	
						Zactd = -ActZ + ZGLOBAL + gV(4)
					!ELSEIF (PrevTool = gV(8) + 1)
					!	Xact = 0
					!	Yact = 0	
					!	Zactd = -ActZ + ZGLOBAL + gV(4)
					ELSE 
						Xact = -ActX + XGLOBAL + gV(2) + XSavedOffset
						Yact = -ActY + YGLOBAL + gV(3) + YSavedOffset
						Zactd = -ActZ + ZGLOBAL + gV(4)! + ZSavedOffset
					END
				ELSE
					Xact = gV(2)
					Yact = gV(3)
					Zactd = gV(4)
				END
				
				IF (ActZ > ActZ + Zactd)
					PTP/re (X, Y), Xact, Yact
					PTP/re (Z1), Zactd	
				ELSE
					PTP/re (Z1), Zactd
					PTP/re (X, Y), Xact, Yact
				END
				
			!TILL ^MST(2).#MOVE
			PTP/re (F1),	gV(5)/(POW(S1Diameter,2)* PI /4)						! ???????????? 
			!TILL ^MST(7).#MOVE
			PTP/re (F1), (-gV(7))/(POW(S1Diameter,2)* PI /4)		! ??????????
			!TILL ^MST(7).#MOVE
			!N20 G01 Z[-gV(5)]
			PTP/re (Z1), gV(6)												! ??????????? ?? ??? Z S1
			!STOP
			!OffsetZ = FPOS(2)
			TILL ^AST(X).#MOVE & ^AST(Y).#MOVE & ^AST(Z1).#MOVE & ^AST(F1).#MOVE
			
		ELSEIF (gV(8) = 2)														! ????? 2
				IF (PrevTool <> gV(8) + 1)
					CurOffsetX = -OffsetX(PrevTool) + OffsetX(Z2)
					CurOffsetY = -OffsetY(PrevTool) + OffsetY(Z2)
					CurOffsetZ = -ZOffset(PrevTool) + ZOffset(Z2)
					XSavedOffset = CurOffsetX
					YSavedOffset = CurOffsetY
					ZSavedOffset = CurOffsetZ
				ELSE
					CurOffsetX = 0
					CurOffsetY = 0
					CurOffsetZ = 0
				END
				!CurOffsetZ = ZGLOBAL - FPOS(3)
				!IF (OffsetZ <> 0)
				!	CurOffsetZ = OffsetZ - FPOS(3)
				!ELSEIF (OffsetZ = ZGLOBAL)
				!	CurOffsetZ = 0
				!ELSE
				!	CurOffsetZ = 0
				!END
				
				PrevTool = 3
				
				PTP/re(X, Y), CurOffsetX, CurOffsetY
				PTP/re(Z2), -CurOffsetZ + OperatorZOffset(Z2)
				!PTP/re(3), CurOffsetZ
				ActX = FPOS(X)
				ActY = FPOS(Y)
				ActZ = FPOS(Z2)
				
				IF (WORKMODE = 90)
					IF (StartTool = gV(8) + 1)
						Xact = -ActX + XGLOBAL + gV(2)
						Yact = -ActY + YGLOBAL + gV(3)
						Zactd = -ActZ + ZGLOBAL + gV(4)
					!ELSEIF (PrevTool = gV(8) + 1)
					!	Xact = 0
					!	Yact = 0
					!	Zactd = -ActZ + ZGLOBAL + gV(4)
					ELSE 
						Xact = -ActX + XGLOBAL + gV(2) + XSavedOffset
						Yact = -ActY + YGLOBAL + gV(3) + YSavedOffset
						Zactd = -ActZ + ZGLOBAL + gV(4)! + ZSavedOffset
					END
				ELSE
					Xact = gV(2)
					Yact = gV(3)
					Zactd = gV(4)
				END

				IF (ActZ > ActZ + Zactd)
					PTP/re (X, Y), Xact, Yact
					PTP/re (Z2), Zactd	
				ELSE
					PTP/re (Z2), Zactd
					PTP/re (X, Y), Xact, Yact
				END

			!TILL ^MST(3).#MOVE
			PTP/re (F2),	gV(5)/(POW(S2Diameter,2)* PI /4)						! ???????????? 
			!TILL ^MST(8).#MOVE
			PTP/re (F2),	(- gV(7))/(POW(S2Diameter,2)* PI /4)	! ??????????
			!TILL ^MST(8).#MOVE
			PTP/re (Z2), gV(6)												! ??????????? ?? ??? Z S2
			!STOP
			!OffsetZ = FPOS(3)
			TILL ^AST(X).#MOVE & ^AST(Y).#MOVE & ^AST(Z2).#MOVE & ^AST(F2).#MOVE
			
		ELSEIF (gV(8) = 3)														! ????? 3
			!DISP "Num 3"
				IF (PrevTool <> gV(8) + 1)
					CurOffsetX = -OffsetX(PrevTool) + OffsetX(Z3)
					CurOffsetY = -OffsetY(PrevTool) + OffsetY(Z3)
					CurOffsetZ = -ZOffset(PrevTool) + ZOffset(Z3)
					XSavedOffset = CurOffsetX
					YSavedOffset = CurOffsetY
					ZSavedOffset = CurOffsetZ
				ELSE
					CurOffsetX = 0
					CurOffsetY = 0
					CurOffsetZ = 0
				END
				
				PrevTool = 4
				!DISP "CurOffsetX = ", CurOffsetX
				!DISP "CurOffsetY = ", CurOffsetY
				!CurOffsetZ = ZGLOBAL - FPOS(4)
				!IF (OffsetZ <> 0)
				!	CurOffsetZ = OffsetZ - FPOS(4)
				!ELSEIF (OffsetZ = ZGLOBAL)
				!	CurOffsetZ = 0
				!ELSE
				!	CurOffsetZ = 0
				!END
				PTP/re(X, Y), CurOffsetX, CurOffsetY
				PTP/re(Z3), -CurOffsetZ + OperatorZOffset(Z3)
				!PTP/re(4),  CurOffsetZ				
				!TILL ^MST(0).#MOVE & ^MST(1).#MOVE & ^MST(4).#MOVE
				!PTP/rev(0, 1), CurOffsetX, CurOffsetY, gV(5)
				ActX = FPOS(X)
				ActY = FPOS(Y)
				ActZ = FPOS(Z3)
				IF (WORKMODE = 90)
					IF (StartTool = gV(8) + 1)
						Xact = -ActX + XGLOBAL + gV(2)
						Yact = -ActY + YGLOBAL + gV(3)	
						Zactd = -ActZ + ZGLOBAL + gV(4)
					!ELSEIF (PrevTool = gV(8) + 1)
					!	Xact = 0
					!	Yact = 0	
					!	Zactd = -ActZ + ZGLOBAL + gV(4)
					ELSE 
						Xact = -ActX + XGLOBAL + gV(2) + XSavedOffset
						Yact = -ActY + YGLOBAL + gV(3) + YSavedOffset
						Zactd = -ActZ + ZGLOBAL + gV(4)! + ZSavedOffset
					END
				ELSE
					Xact = gV(2)
					Yact = gV(3)
					Zactd = gV(4)
				END
				
				IF (ActZ > ActZ + Zactd)
					PTP/re (X, Y), Xact, Yact
					PTP/re (Z3), Zactd	
				ELSE
					PTP/re (Z3), Zactd
					PTP/re (X, Y), Xact, Yact
				END
				
			!TILL ^MST(4).#MOVE
			PTP/re (F3),	gV(5)/(POW(S3Diameter,2)* PI /4)					! ???????????? 
			!TILL ^MST(9).#MOVE
			PTP/re (F3),	(- gV(7))/(POW(S3Diameter,2)* PI /4)				! ??????????
			!TILL ^MST(9).#MOVE
			PTP/re (Z3), gV(6)												! ??????????? ?? ??? Z S3
			!STOP
			!OffsetZ = FPOS(4)
			!TILL ^AST(0).#MOVE & ^AST(1).#MOVE & ^AST(4).#MOVE & ^AST(9).#MOVE
			
		ELSE
			DISP "Wrong Axis"
			STOP
		END
	ELSE
		DISP "Not enough parameters"
		STOP
	END
RET
